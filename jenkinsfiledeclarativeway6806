pipeline {
    
    agent {
  label 'nodes'
}


    tools {
  maven 'maven-3.9.9'
}

triggers {
  pollSCM '* * * * *'
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '5')
  timestamps()
}


    stages {
        
        //git checkoutcode
        stage('checkoutcode') {
            steps {
            sendSlackNotifications("STARTED")
            echo "The job name is: ${JOB_NAME}"
            echo "The node name is: ${NODE_NAME}"
            echo "The Build number is: ${BUILD_NUMBER}"
            echo "The jenkins directory is: ${JENKINS_HOME}"
                git credentialsId: '3d9b468a-ba85-46e7-bf28-1b1a456b90c1', url: 'https://github.com/pavankumarnagandla/maven-web-application.git'
            }
        }
        
        //build stage
        stage('build'){
            steps{
                sh "mvn clean package"
            }
        }
       
        //execute sonarqube report
        stage('execute sonarqube report'){
            steps{
                sh "mvn sonar:sonar"
            }
        } 
        
        //upload artifacts into nexus
        stage('upload artifacts into nexus'){
            steps{
               sh "mvn clean deploy"
            }
        }
        
        //deploy into tomcat server
        stage('deploy into tomcatserver'){
            steps{
               sshagent(['Tomcat_ssh_privatekey']) {
               sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.9.130:/opt/apache-tomcat-9.0.97/webapps"
            }
            }
        }

    }//stages closing
    
post {
  success {
     sendSlackNotifications(currentBuild.result)
  }
  failure {
    sendSlackNotifications(currentBuild.result)
  }
}

}//pipeline closing


//slack notifications
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#flipkart-dev')
}
