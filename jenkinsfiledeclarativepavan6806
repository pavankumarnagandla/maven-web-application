pipeline{
 agent any
 tools {
  maven '3.8.5'
}

 triggers {
  pollSCM ('* * * * *')
}
 options {
  timestamps()
}
 stages{
   //CheckoutCode stage
   stage('checkoutCode'){
   steps{
   SendSlackNotifications("STARTED")
   git branch: 'development', credentialsId: 'd8412478-4e0f-4719-a5db-13dc7b7eff47', url: 'https://github.com/pavankumarnagandla/maven-web-application.git'
}
}

   //Build the code
   stage('Build'){
   steps{
   sh "mvn clean package"
}
}

  //Execute SonarQube Report
  stage('ExecuteSonarQubeReport'){
  steps{
  sh "mvn clean sonar:sonar"
}
}

  //Upload Artifacts Into Nexus
  stage('UplaodArtifactsIntoNexus'){
  steps{
  sh "mvn clean deploy"
}
}
  //Deploy App Into TomcatServer
  stage('DeployAppIntoTomcatServer'){
  steps{
  sshagent(['a240e81d-5e3a-4094-a701-b59c0b976fcd']) {
sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.42.26:/opt/apache-tomcat-9.0.70/webapps"
}
}
}

 }//stages closing

post {
  success {
    SendSlackNotifications(currentBuild.result)
   
  }
  failure {
    SendSlackNotifications(currentBuild.result)

  }
}


}//pipeline closing

//Slack Send Notifications function
def SendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#icicibank')
}
