node('nodes'){
    
    echo "The Job name is: ${JOB_NAME}"
    echo "The Node name is: ${NODE_NAME}"
    echo "The Build number is: ${BUILD_NUMBER}"
    echo "The Jenkins home directory is: ${JENKINS_HOME}"
    
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '5')), pipelineTriggers([pollSCM('* * * * *')])])
    
    def mavenHome = tool name: "maven-3.9.9"

    try {
        sendSlackNotifications('STARTED')
    
    stage('checkoutcode'){
        git credentialsId: '3d9b468a-ba85-46e7-bf28-1b1a456b90c1', url: 'https://github.com/pavankumarnagandla/maven-web-application.git'
    }
    
    stage('build'){
        sh "${mavenHome}/bin/mvn clean package"
        
    }
    
    stage('generate sonarqube report'){
        sh "${mavenHome}/bin/mvn sonar:sonar"
    }
    
    stage('upload artifacts into nexus'){
        sh "${mavenHome}/bin/mvn clean deploy"
    }
    
    stage('deploy into tomcat'){
       sshagent(['Tomcat_ssh_privatekey']) {
       sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.9.130:/opt/apache-tomcat-9.0.97/webapps/"
    } 
    }

}//try closing
 
catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
  }
 
finally {
    // Success or failure, always send notifications
    sendSlackNotifications(currentBuild.result)
  }
}//node closing


//send slack notifications
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#flipkart-dev')
}
